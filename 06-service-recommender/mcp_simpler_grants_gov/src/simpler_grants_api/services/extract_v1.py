# This file was generated by liblab | https://liblab.com/

from typing import Union
from .utils.validator import Validator
from .utils.base_service import BaseService
from ..net.transport.serializer import Serializer
from ..net.environment.environment import Environment
from ..models.utils.cast_models import cast_models
from ..models import ErrorResponse, ExtractMetadataListResponse, ExtractMetadataRequest


class ExtractV1Service(BaseService):

    @cast_models
    def create_v1_extracts(
        self, request_body: ExtractMetadataRequest = None
    ) -> ExtractMetadataListResponse:
        """create_v1_extracts

        :param request_body: The request body., defaults to None
        :type request_body: ExtractMetadataRequest, optional
        ...
        :raises RequestError: Raised when a request fails, with optional HTTP status code and details.
        ...
        :return: The parsed response data.
        :rtype: ExtractMetadataListResponse
        """

        Validator(ExtractMetadataRequest).is_optional().validate(request_body)

        serialized_request = (
            Serializer(
                f"{self.base_url or Environment.DEFAULT.url}/v1/extracts",
                [self.get_api_key()],
            )
            .add_error(401, ErrorResponse)
            .add_error(422, ErrorResponse)
            .serialize()
            .set_method("POST")
            .set_body(request_body)
        )

        response, status, _ = self.send_request(serialized_request)
        return ExtractMetadataListResponse._unmap(response)
