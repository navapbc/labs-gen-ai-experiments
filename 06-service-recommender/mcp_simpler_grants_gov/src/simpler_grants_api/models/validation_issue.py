# This file was generated by liblab | https://liblab.com/

from .utils.json_map import JsonMap
from .utils.base_model import BaseModel
from .utils.sentinel import SENTINEL


@JsonMap({"type_": "type"})
class ValidationIssue(BaseModel):
    """ValidationIssue

    :param field: The field that failed, defaults to None
    :type field: str, optional
    :param message: The message to return, defaults to None
    :type message: str, optional
    :param type_: The type of error, defaults to None
    :type type_: str, optional
    :param value: The value that failed, defaults to None
    :type value: str, optional
    """

    def __init__(
        self,
        field: str = SENTINEL,
        message: str = SENTINEL,
        type_: str = SENTINEL,
        value: str = SENTINEL,
        **kwargs
    ):
        """ValidationIssue

        :param field: The field that failed, defaults to None
        :type field: str, optional
        :param message: The message to return, defaults to None
        :type message: str, optional
        :param type_: The type of error, defaults to None
        :type type_: str, optional
        :param value: The value that failed, defaults to None
        :type value: str, optional
        """
        if field is not SENTINEL:
            self.field = field
        if message is not SENTINEL:
            self.message = message
        if type_ is not SENTINEL:
            self.type_ = type_
        if value is not SENTINEL:
            self.value = value
        self._kwargs = kwargs
