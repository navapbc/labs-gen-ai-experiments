# This file was generated by liblab | https://liblab.com/

from .utils.json_map import JsonMap
from .utils.base_model import BaseModel
from .utils.sentinel import SENTINEL


@JsonMap({})
class OpportunityFacetV1(BaseModel):
    """OpportunityFacetV1

    :param agency: The counts of agency values in the full response, defaults to None
    :type agency: dict, optional
    :param applicant_type: The counts of applicant_type values in the full response, defaults to None
    :type applicant_type: dict, optional
    :param funding_category: The counts of funding_category values in the full response, defaults to None
    :type funding_category: dict, optional
    :param funding_instrument: The counts of funding_instrument values in the full response, defaults to None
    :type funding_instrument: dict, optional
    :param is_cost_sharing: The counts of is_cost_sharing values in the full response, defaults to None
    :type is_cost_sharing: dict, optional
    :param opportunity_status: The counts of opportunity_status values in the full response, defaults to None
    :type opportunity_status: dict, optional
    """

    def __init__(
        self,
        agency: dict = SENTINEL,
        applicant_type: dict = SENTINEL,
        funding_category: dict = SENTINEL,
        funding_instrument: dict = SENTINEL,
        is_cost_sharing: dict = SENTINEL,
        opportunity_status: dict = SENTINEL,
        **kwargs
    ):
        """OpportunityFacetV1

        :param agency: The counts of agency values in the full response, defaults to None
        :type agency: dict, optional
        :param applicant_type: The counts of applicant_type values in the full response, defaults to None
        :type applicant_type: dict, optional
        :param funding_category: The counts of funding_category values in the full response, defaults to None
        :type funding_category: dict, optional
        :param funding_instrument: The counts of funding_instrument values in the full response, defaults to None
        :type funding_instrument: dict, optional
        :param is_cost_sharing: The counts of is_cost_sharing values in the full response, defaults to None
        :type is_cost_sharing: dict, optional
        :param opportunity_status: The counts of opportunity_status values in the full response, defaults to None
        :type opportunity_status: dict, optional
        """
        if agency is not SENTINEL:
            self.agency = agency
        if applicant_type is not SENTINEL:
            self.applicant_type = applicant_type
        if funding_category is not SENTINEL:
            self.funding_category = funding_category
        if funding_instrument is not SENTINEL:
            self.funding_instrument = funding_instrument
        if is_cost_sharing is not SENTINEL:
            self.is_cost_sharing = is_cost_sharing
        if opportunity_status is not SENTINEL:
            self.opportunity_status = opportunity_status
        self._kwargs = kwargs
