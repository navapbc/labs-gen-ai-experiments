# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from typing import List
from .utils.json_map import JsonMap
from .utils.base_model import BaseModel
from .utils.sentinel import SENTINEL
from .user_organization import UserOrganization


@JsonMap({})
class UserOrganizationsResponse(BaseModel):
    """UserOrganizationsResponse

    :param data: List of organizations the user is associated with, defaults to None
    :type data: List[UserOrganization], optional
    :param message: The message to return, defaults to None
    :type message: str, optional
    :param status_code: The HTTP status code, defaults to None
    :type status_code: int, optional
    """

    def __init__(
        self,
        data: List[UserOrganization] = SENTINEL,
        message: str = SENTINEL,
        status_code: int = SENTINEL,
        **kwargs,
    ):
        """UserOrganizationsResponse

        :param data: List of organizations the user is associated with, defaults to None
        :type data: List[UserOrganization], optional
        :param message: The message to return, defaults to None
        :type message: str, optional
        :param status_code: The HTTP status code, defaults to None
        :type status_code: int, optional
        """
        if data is not SENTINEL:
            self.data = self._define_list(data, UserOrganization)
        if message is not SENTINEL:
            self.message = message
        if status_code is not SENTINEL:
            self.status_code = status_code
        self._kwargs = kwargs
