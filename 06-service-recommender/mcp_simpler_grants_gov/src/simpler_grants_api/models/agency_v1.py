# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from enum import Enum
from typing import List
from .utils.json_map import JsonMap
from .utils.base_model import BaseModel
from .utils.sentinel import SENTINEL


class OpportunityStatuses(Enum):
    """An enumeration representing different categories.

    :cvar FORECASTED: "forecasted"
    :vartype FORECASTED: str
    :cvar POSTED: "posted"
    :vartype POSTED: str
    :cvar CLOSED: "closed"
    :vartype CLOSED: str
    :cvar ARCHIVED: "archived"
    :vartype ARCHIVED: str
    """

    FORECASTED = "forecasted"
    POSTED = "posted"
    CLOSED = "closed"
    ARCHIVED = "archived"

    def list():
        """Lists all category values.

        :return: A list of all category values.
        :rtype: list
        """
        return list(map(lambda x: x.value, OpportunityStatuses._member_map_.values()))


@JsonMap({})
class AgencyV1(BaseModel):
    """AgencyV1

    :param agency_code: The agency who created the opportunity, defaults to None
    :type agency_code: str, optional
    :param agency_id: The internal ID of the agency, defaults to None
    :type agency_id: str, optional
    :param agency_name: The name of the agency who created the opportunity, defaults to None
    :type agency_name: str, optional
    :param created_at: created_at, defaults to None
    :type created_at: str, optional
    :param is_test_agency: Indicates if the agency is a test agency., defaults to None
    :type is_test_agency: bool, optional
    :param opportunity_statuses: List of opportunity statuses the agency is linked with., defaults to None
    :type opportunity_statuses: List[OpportunityStatuses], optional
    :param top_level_agency: top_level_agency, defaults to None
    :type top_level_agency: AgencyV1, optional
    :param updated_at: updated_at, defaults to None
    :type updated_at: str, optional
    """

    def __init__(
        self,
        agency_code: str = SENTINEL,
        agency_id: str = SENTINEL,
        agency_name: str = SENTINEL,
        created_at: str = SENTINEL,
        is_test_agency: bool = SENTINEL,
        opportunity_statuses: List[OpportunityStatuses] = SENTINEL,
        top_level_agency: AgencyV1 = SENTINEL,
        updated_at: str = SENTINEL,
        **kwargs,
    ):
        """AgencyV1

        :param agency_code: The agency who created the opportunity, defaults to None
        :type agency_code: str, optional
        :param agency_id: The internal ID of the agency, defaults to None
        :type agency_id: str, optional
        :param agency_name: The name of the agency who created the opportunity, defaults to None
        :type agency_name: str, optional
        :param created_at: created_at, defaults to None
        :type created_at: str, optional
        :param is_test_agency: Indicates if the agency is a test agency., defaults to None
        :type is_test_agency: bool, optional
        :param opportunity_statuses: List of opportunity statuses the agency is linked with., defaults to None
        :type opportunity_statuses: List[OpportunityStatuses], optional
        :param top_level_agency: top_level_agency, defaults to None
        :type top_level_agency: AgencyV1, optional
        :param updated_at: updated_at, defaults to None
        :type updated_at: str, optional
        """
        if agency_code is not SENTINEL:
            self.agency_code = agency_code
        if agency_id is not SENTINEL:
            self.agency_id = agency_id
        if agency_name is not SENTINEL:
            self.agency_name = agency_name
        if created_at is not SENTINEL:
            self.created_at = created_at
        if is_test_agency is not SENTINEL:
            self.is_test_agency = is_test_agency
        if opportunity_statuses is not SENTINEL:
            self.opportunity_statuses = self._define_list(
                opportunity_statuses, OpportunityStatuses
            )
        if top_level_agency is not SENTINEL:
            self.top_level_agency = self._define_object(top_level_agency, AgencyV1)
        if updated_at is not SENTINEL:
            self.updated_at = updated_at
        self._kwargs = kwargs
