# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from .utils.json_map import JsonMap
from .utils.base_model import BaseModel
from .utils.sentinel import SENTINEL
from .sam_gov_entity import SamGovEntity


@JsonMap({})
class UserOrganization(BaseModel):
    """UserOrganization

    :param is_organization_owner: Whether the user is an owner of this organization, defaults to None
    :type is_organization_owner: bool, optional
    :param organization_id: The internal ID of the organization, defaults to None
    :type organization_id: str, optional
    :param sam_gov_entity: sam_gov_entity, defaults to None
    :type sam_gov_entity: SamGovEntity, optional
    """

    def __init__(
        self,
        is_organization_owner: bool = SENTINEL,
        organization_id: str = SENTINEL,
        sam_gov_entity: SamGovEntity = SENTINEL,
        **kwargs,
    ):
        """UserOrganization

        :param is_organization_owner: Whether the user is an owner of this organization, defaults to None
        :type is_organization_owner: bool, optional
        :param organization_id: The internal ID of the organization, defaults to None
        :type organization_id: str, optional
        :param sam_gov_entity: sam_gov_entity, defaults to None
        :type sam_gov_entity: SamGovEntity, optional
        """
        if is_organization_owner is not SENTINEL:
            self.is_organization_owner = is_organization_owner
        if organization_id is not SENTINEL:
            self.organization_id = organization_id
        if sam_gov_entity is not SENTINEL:
            self.sam_gov_entity = self._define_object(sam_gov_entity, SamGovEntity)
        self._kwargs = kwargs
