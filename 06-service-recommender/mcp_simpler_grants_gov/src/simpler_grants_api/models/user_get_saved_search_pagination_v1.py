# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from typing import List
from .utils.json_map import JsonMap
from .utils.base_model import BaseModel
from .utils.sentinel import SENTINEL
from .sort_order_user_get_saved_search_pagination_v1 import (
    SortOrderUserGetSavedSearchPaginationV1,
)


@JsonMap({})
class UserGetSavedSearchPaginationV1(BaseModel):
    """UserGetSavedSearchPaginationV1

    :param page_offset: The page number to fetch, starts counting from 1
    :type page_offset: int
    :param page_size: The size of the page to fetch
    :type page_size: int
    :param sort_order: The list of sorting rules, defaults to None
    :type sort_order: List[SortOrderUserGetSavedSearchPaginationV1], optional
    """

    def __init__(
        self,
        page_offset: int,
        page_size: int,
        sort_order: List[SortOrderUserGetSavedSearchPaginationV1] = SENTINEL,
        **kwargs,
    ):
        """UserGetSavedSearchPaginationV1

        :param page_offset: The page number to fetch, starts counting from 1
        :type page_offset: int
        :param page_size: The size of the page to fetch
        :type page_size: int
        :param sort_order: The list of sorting rules, defaults to None
        :type sort_order: List[SortOrderUserGetSavedSearchPaginationV1], optional
        """
        self.page_offset = self._define_number("page_offset", page_offset, ge=1)
        self.page_size = self._define_number("page_size", page_size, ge=1, le=5000)
        if sort_order is not SENTINEL:
            self.sort_order = self._define_list(
                sort_order, SortOrderUserGetSavedSearchPaginationV1
            )
        self._kwargs = kwargs
