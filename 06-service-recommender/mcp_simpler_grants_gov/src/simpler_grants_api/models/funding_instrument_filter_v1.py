# This file was generated by liblab | https://liblab.com/

from enum import Enum
from typing import List
from .utils.json_map import JsonMap
from .utils.base_model import BaseModel
from .utils.sentinel import SENTINEL


class FundingInstrumentFilterV1OneOf(Enum):
    """An enumeration representing different categories.

    :cvar COOPERATIVEAGREEMENT: "cooperative_agreement"
    :vartype COOPERATIVEAGREEMENT: str
    :cvar GRANT: "grant"
    :vartype GRANT: str
    :cvar PROCUREMENTCONTRACT: "procurement_contract"
    :vartype PROCUREMENTCONTRACT: str
    :cvar OTHER: "other"
    :vartype OTHER: str
    """

    COOPERATIVEAGREEMENT = "cooperative_agreement"
    GRANT = "grant"
    PROCUREMENTCONTRACT = "procurement_contract"
    OTHER = "other"

    def list():
        """Lists all category values.

        :return: A list of all category values.
        :rtype: list
        """
        return list(
            map(lambda x: x.value, FundingInstrumentFilterV1OneOf._member_map_.values())
        )


@JsonMap({})
class FundingInstrumentFilterV1(BaseModel):
    """FundingInstrumentFilterV1

    :param one_of: one_of, defaults to None
    :type one_of: List[FundingInstrumentFilterV1OneOf], optional
    """

    def __init__(
        self, one_of: List[FundingInstrumentFilterV1OneOf] = SENTINEL, **kwargs
    ):
        """FundingInstrumentFilterV1

        :param one_of: one_of, defaults to None
        :type one_of: List[FundingInstrumentFilterV1OneOf], optional
        """
        if one_of is not SENTINEL:
            self.one_of = self._define_list(one_of, FundingInstrumentFilterV1OneOf)
        self._kwargs = kwargs
