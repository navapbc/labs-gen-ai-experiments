# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from typing import List
from .utils.json_map import JsonMap
from ..net.transport.api_error import ApiError
from .utils.sentinel import SENTINEL
from .validation_issue import ValidationIssue


@JsonMap({})
class ErrorResponse(ApiError):
    """ErrorResponse

    :param data: Additional data that might be useful in resolving an error (see specific endpoints for details, this is used infrequently), defaults to None
    :type data: any, optional
    :param errors: errors, defaults to None
    :type errors: List[ValidationIssue], optional
    :param internal_request_id: An internal tracking ID, defaults to None
    :type internal_request_id: str, optional
    :param message: General description of the error, defaults to None
    :type message: str, optional
    :param status_code: The HTTP status code of the error, defaults to None
    :type status_code: int, optional
    """

    def __init__(
        self,
        data: any = SENTINEL,
        errors: List[ValidationIssue] = SENTINEL,
        internal_request_id: str = SENTINEL,
        message: str = SENTINEL,
        status_code: int = SENTINEL,
        **kwargs,
    ):
        """ErrorResponse

        :param data: Additional data that might be useful in resolving an error (see specific endpoints for details, this is used infrequently), defaults to None
        :type data: any, optional
        :param errors: errors, defaults to None
        :type errors: List[ValidationIssue], optional
        :param internal_request_id: An internal tracking ID, defaults to None
        :type internal_request_id: str, optional
        :param message: General description of the error, defaults to None
        :type message: str, optional
        :param status_code: The HTTP status code of the error, defaults to None
        :type status_code: int, optional
        """
        if data is not SENTINEL:
            self.data = data
        if errors is not SENTINEL:
            self.errors = self._define_list(errors, ValidationIssue)
        if internal_request_id is not SENTINEL:
            self.internal_request_id = internal_request_id
        if message is not SENTINEL:
            self.message = message
        if status_code is not SENTINEL:
            self.status_code = status_code
        self._kwargs = kwargs
