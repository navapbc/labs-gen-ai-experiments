# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from enum import Enum
from .utils.json_map import JsonMap
from .utils.base_model import BaseModel
from .utils.sentinel import SENTINEL
from .saved_opportunity_summary_v1 import SavedOpportunitySummaryV1


class SavedOpportunityResponseV1OpportunityStatus(Enum):
    """An enumeration representing different categories.

    :cvar FORECASTED: "forecasted"
    :vartype FORECASTED: str
    :cvar POSTED: "posted"
    :vartype POSTED: str
    :cvar CLOSED: "closed"
    :vartype CLOSED: str
    :cvar ARCHIVED: "archived"
    :vartype ARCHIVED: str
    """

    FORECASTED = "forecasted"
    POSTED = "posted"
    CLOSED = "closed"
    ARCHIVED = "archived"

    def list():
        """Lists all category values.

        :return: A list of all category values.
        :rtype: list
        """
        return list(
            map(
                lambda x: x.value,
                SavedOpportunityResponseV1OpportunityStatus._member_map_.values(),
            )
        )


@JsonMap({})
class SavedOpportunityResponseV1(BaseModel):
    """SavedOpportunityResponseV1

    :param opportunity_id: The ID of the saved opportunity, defaults to None
    :type opportunity_id: int, optional
    :param opportunity_status: The current status of the opportunity, defaults to None
    :type opportunity_status: SavedOpportunityResponseV1OpportunityStatus, optional
    :param opportunity_title: The title of the opportunity, defaults to None
    :type opportunity_title: str, optional
    :param summary: summary, defaults to None
    :type summary: SavedOpportunitySummaryV1, optional
    """

    def __init__(
        self,
        opportunity_id: int = SENTINEL,
        opportunity_status: SavedOpportunityResponseV1OpportunityStatus = SENTINEL,
        opportunity_title: str = SENTINEL,
        summary: SavedOpportunitySummaryV1 = SENTINEL,
        **kwargs,
    ):
        """SavedOpportunityResponseV1

        :param opportunity_id: The ID of the saved opportunity, defaults to None
        :type opportunity_id: int, optional
        :param opportunity_status: The current status of the opportunity, defaults to None
        :type opportunity_status: SavedOpportunityResponseV1OpportunityStatus, optional
        :param opportunity_title: The title of the opportunity, defaults to None
        :type opportunity_title: str, optional
        :param summary: summary, defaults to None
        :type summary: SavedOpportunitySummaryV1, optional
        """
        if opportunity_id is not SENTINEL:
            self.opportunity_id = opportunity_id
        if opportunity_status is not SENTINEL:
            self.opportunity_status = self._enum_matching(
                opportunity_status,
                SavedOpportunityResponseV1OpportunityStatus.list(),
                "opportunity_status",
            )
        if opportunity_title is not SENTINEL:
            self.opportunity_title = opportunity_title
        if summary is not SENTINEL:
            self.summary = self._define_object(summary, SavedOpportunitySummaryV1)
        self._kwargs = kwargs
