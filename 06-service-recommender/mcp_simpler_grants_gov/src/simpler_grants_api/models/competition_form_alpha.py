# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from .utils.json_map import JsonMap
from .utils.base_model import BaseModel
from .utils.sentinel import SENTINEL
from .form_alpha import FormAlpha


@JsonMap({})
class CompetitionFormAlpha(BaseModel):
    """CompetitionFormAlpha

    :param form: form, defaults to None
    :type form: FormAlpha, optional
    :param is_required: Whether the form is required for all applications to the competition, defaults to None
    :type is_required: bool, optional
    """

    def __init__(
        self, form: FormAlpha = SENTINEL, is_required: bool = SENTINEL, **kwargs
    ):
        """CompetitionFormAlpha

        :param form: form, defaults to None
        :type form: FormAlpha, optional
        :param is_required: Whether the form is required for all applications to the competition, defaults to None
        :type is_required: bool, optional
        """
        if form is not SENTINEL:
            self.form = self._define_object(form, FormAlpha)
        if is_required is not SENTINEL:
            self.is_required = is_required
        self._kwargs = kwargs
