# This file was generated by liblab | https://liblab.com/

from .utils.json_map import JsonMap
from .utils.base_model import BaseModel
from .utils.sentinel import SENTINEL


@JsonMap({})
class SavedOpportunitySummaryV1(BaseModel):
    """SavedOpportunitySummaryV1

    :param close_date: The date the opportunity will close, defaults to None
    :type close_date: str, optional
    :param is_forecast: Whether the opportunity is forecasted, defaults to None
    :type is_forecast: bool, optional
    :param post_date: The date the opportunity was posted, defaults to None
    :type post_date: str, optional
    """

    def __init__(
        self,
        close_date: str = SENTINEL,
        is_forecast: bool = SENTINEL,
        post_date: str = SENTINEL,
        **kwargs
    ):
        """SavedOpportunitySummaryV1

        :param close_date: The date the opportunity will close, defaults to None
        :type close_date: str, optional
        :param is_forecast: Whether the opportunity is forecasted, defaults to None
        :type is_forecast: bool, optional
        :param post_date: The date the opportunity was posted, defaults to None
        :type post_date: str, optional
        """
        if close_date is not SENTINEL:
            self.close_date = close_date
        if is_forecast is not SENTINEL:
            self.is_forecast = is_forecast
        if post_date is not SENTINEL:
            self.post_date = post_date
        self._kwargs = kwargs
