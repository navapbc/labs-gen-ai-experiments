# This file was generated by liblab | https://liblab.com/

from enum import Enum
from typing import List
from .utils.json_map import JsonMap
from .utils.base_model import BaseModel
from .utils.sentinel import SENTINEL


class ApplicantTypeFilterV1OneOf(Enum):
    """An enumeration representing different categories.

    :cvar STATEGOVERNMENTS: "state_governments"
    :vartype STATEGOVERNMENTS: str
    :cvar COUNTYGOVERNMENTS: "county_governments"
    :vartype COUNTYGOVERNMENTS: str
    :cvar CITYORTOWNSHIPGOVERNMENTS: "city_or_township_governments"
    :vartype CITYORTOWNSHIPGOVERNMENTS: str
    :cvar SPECIALDISTRICTGOVERNMENTS: "special_district_governments"
    :vartype SPECIALDISTRICTGOVERNMENTS: str
    :cvar INDEPENDENTSCHOOLDISTRICTS: "independent_school_districts"
    :vartype INDEPENDENTSCHOOLDISTRICTS: str
    :cvar PUBLICANDSTATEINSTITUTIONSOFHIGHEREDUCATION: "public_and_state_institutions_of_higher_education"
    :vartype PUBLICANDSTATEINSTITUTIONSOFHIGHEREDUCATION: str
    :cvar PRIVATEINSTITUTIONSOFHIGHEREDUCATION: "private_institutions_of_higher_education"
    :vartype PRIVATEINSTITUTIONSOFHIGHEREDUCATION: str
    :cvar FEDERALLYRECOGNIZEDNATIVEAMERICANTRIBALGOVERNMENTS: "federally_recognized_native_american_tribal_governments"
    :vartype FEDERALLYRECOGNIZEDNATIVEAMERICANTRIBALGOVERNMENTS: str
    :cvar OTHERNATIVEAMERICANTRIBALORGANIZATIONS: "other_native_american_tribal_organizations"
    :vartype OTHERNATIVEAMERICANTRIBALORGANIZATIONS: str
    :cvar PUBLICANDINDIANHOUSINGAUTHORITIES: "public_and_indian_housing_authorities"
    :vartype PUBLICANDINDIANHOUSINGAUTHORITIES: str
    :cvar NONPROFITSNONHIGHEREDUCATIONWITH501C3: "nonprofits_non_higher_education_with_501c3"
    :vartype NONPROFITSNONHIGHEREDUCATIONWITH501C3: str
    :cvar NONPROFITSNONHIGHEREDUCATIONWITHOUT501C3: "nonprofits_non_higher_education_without_501c3"
    :vartype NONPROFITSNONHIGHEREDUCATIONWITHOUT501C3: str
    :cvar INDIVIDUALS: "individuals"
    :vartype INDIVIDUALS: str
    :cvar FORPROFITORGANIZATIONSOTHERTHANSMALLBUSINESSES: "for_profit_organizations_other_than_small_businesses"
    :vartype FORPROFITORGANIZATIONSOTHERTHANSMALLBUSINESSES: str
    :cvar SMALLBUSINESSES: "small_businesses"
    :vartype SMALLBUSINESSES: str
    :cvar OTHER: "other"
    :vartype OTHER: str
    :cvar UNRESTRICTED: "unrestricted"
    :vartype UNRESTRICTED: str
    """

    STATEGOVERNMENTS = "state_governments"
    COUNTYGOVERNMENTS = "county_governments"
    CITYORTOWNSHIPGOVERNMENTS = "city_or_township_governments"
    SPECIALDISTRICTGOVERNMENTS = "special_district_governments"
    INDEPENDENTSCHOOLDISTRICTS = "independent_school_districts"
    PUBLICANDSTATEINSTITUTIONSOFHIGHEREDUCATION = (
        "public_and_state_institutions_of_higher_education"
    )
    PRIVATEINSTITUTIONSOFHIGHEREDUCATION = "private_institutions_of_higher_education"
    FEDERALLYRECOGNIZEDNATIVEAMERICANTRIBALGOVERNMENTS = (
        "federally_recognized_native_american_tribal_governments"
    )
    OTHERNATIVEAMERICANTRIBALORGANIZATIONS = (
        "other_native_american_tribal_organizations"
    )
    PUBLICANDINDIANHOUSINGAUTHORITIES = "public_and_indian_housing_authorities"
    NONPROFITSNONHIGHEREDUCATIONWITH501C3 = "nonprofits_non_higher_education_with_501c3"
    NONPROFITSNONHIGHEREDUCATIONWITHOUT501C3 = (
        "nonprofits_non_higher_education_without_501c3"
    )
    INDIVIDUALS = "individuals"
    FORPROFITORGANIZATIONSOTHERTHANSMALLBUSINESSES = (
        "for_profit_organizations_other_than_small_businesses"
    )
    SMALLBUSINESSES = "small_businesses"
    OTHER = "other"
    UNRESTRICTED = "unrestricted"

    def list():
        """Lists all category values.

        :return: A list of all category values.
        :rtype: list
        """
        return list(
            map(lambda x: x.value, ApplicantTypeFilterV1OneOf._member_map_.values())
        )


@JsonMap({})
class ApplicantTypeFilterV1(BaseModel):
    """ApplicantTypeFilterV1

    :param one_of: one_of, defaults to None
    :type one_of: List[ApplicantTypeFilterV1OneOf], optional
    """

    def __init__(self, one_of: List[ApplicantTypeFilterV1OneOf] = SENTINEL, **kwargs):
        """ApplicantTypeFilterV1

        :param one_of: one_of, defaults to None
        :type one_of: List[ApplicantTypeFilterV1OneOf], optional
        """
        if one_of is not SENTINEL:
            self.one_of = self._define_list(one_of, ApplicantTypeFilterV1OneOf)
        self._kwargs = kwargs
