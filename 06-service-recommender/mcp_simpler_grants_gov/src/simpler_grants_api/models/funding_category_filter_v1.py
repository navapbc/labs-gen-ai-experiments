# This file was generated by liblab | https://liblab.com/

from enum import Enum
from typing import List
from .utils.json_map import JsonMap
from .utils.base_model import BaseModel
from .utils.sentinel import SENTINEL


class FundingCategoryFilterV1OneOf(Enum):
    """An enumeration representing different categories.

    :cvar RECOVERYACT: "recovery_act"
    :vartype RECOVERYACT: str
    :cvar AGRICULTURE: "agriculture"
    :vartype AGRICULTURE: str
    :cvar ARTS: "arts"
    :vartype ARTS: str
    :cvar BUSINESSANDCOMMERCE: "business_and_commerce"
    :vartype BUSINESSANDCOMMERCE: str
    :cvar COMMUNITYDEVELOPMENT: "community_development"
    :vartype COMMUNITYDEVELOPMENT: str
    :cvar CONSUMERPROTECTION: "consumer_protection"
    :vartype CONSUMERPROTECTION: str
    :cvar DISASTERPREVENTIONANDRELIEF: "disaster_prevention_and_relief"
    :vartype DISASTERPREVENTIONANDRELIEF: str
    :cvar EDUCATION: "education"
    :vartype EDUCATION: str
    :cvar EMPLOYMENTLABORANDTRAINING: "employment_labor_and_training"
    :vartype EMPLOYMENTLABORANDTRAINING: str
    :cvar ENERGY: "energy"
    :vartype ENERGY: str
    :cvar ENVIRONMENT: "environment"
    :vartype ENVIRONMENT: str
    :cvar FOODANDNUTRITION: "food_and_nutrition"
    :vartype FOODANDNUTRITION: str
    :cvar HEALTH: "health"
    :vartype HEALTH: str
    :cvar HOUSING: "housing"
    :vartype HOUSING: str
    :cvar HUMANITIES: "humanities"
    :vartype HUMANITIES: str
    :cvar INFRASTRUCTUREINVESTMENTANDJOBSACT: "infrastructure_investment_and_jobs_act"
    :vartype INFRASTRUCTUREINVESTMENTANDJOBSACT: str
    :cvar INFORMATIONANDSTATISTICS: "information_and_statistics"
    :vartype INFORMATIONANDSTATISTICS: str
    :cvar INCOMESECURITYANDSOCIALSERVICES: "income_security_and_social_services"
    :vartype INCOMESECURITYANDSOCIALSERVICES: str
    :cvar LAWJUSTICEANDLEGALSERVICES: "law_justice_and_legal_services"
    :vartype LAWJUSTICEANDLEGALSERVICES: str
    :cvar NATURALRESOURCES: "natural_resources"
    :vartype NATURALRESOURCES: str
    :cvar OPPORTUNITYZONEBENEFITS: "opportunity_zone_benefits"
    :vartype OPPORTUNITYZONEBENEFITS: str
    :cvar REGIONALDEVELOPMENT: "regional_development"
    :vartype REGIONALDEVELOPMENT: str
    :cvar SCIENCETECHNOLOGYANDOTHERRESEARCHANDDEVELOPMENT: "science_technology_and_other_research_and_development"
    :vartype SCIENCETECHNOLOGYANDOTHERRESEARCHANDDEVELOPMENT: str
    :cvar TRANSPORTATION: "transportation"
    :vartype TRANSPORTATION: str
    :cvar AFFORDABLECAREACT: "affordable_care_act"
    :vartype AFFORDABLECAREACT: str
    :cvar OTHER: "other"
    :vartype OTHER: str
    """

    RECOVERYACT = "recovery_act"
    AGRICULTURE = "agriculture"
    ARTS = "arts"
    BUSINESSANDCOMMERCE = "business_and_commerce"
    COMMUNITYDEVELOPMENT = "community_development"
    CONSUMERPROTECTION = "consumer_protection"
    DISASTERPREVENTIONANDRELIEF = "disaster_prevention_and_relief"
    EDUCATION = "education"
    EMPLOYMENTLABORANDTRAINING = "employment_labor_and_training"
    ENERGY = "energy"
    ENVIRONMENT = "environment"
    FOODANDNUTRITION = "food_and_nutrition"
    HEALTH = "health"
    HOUSING = "housing"
    HUMANITIES = "humanities"
    INFRASTRUCTUREINVESTMENTANDJOBSACT = "infrastructure_investment_and_jobs_act"
    INFORMATIONANDSTATISTICS = "information_and_statistics"
    INCOMESECURITYANDSOCIALSERVICES = "income_security_and_social_services"
    LAWJUSTICEANDLEGALSERVICES = "law_justice_and_legal_services"
    NATURALRESOURCES = "natural_resources"
    OPPORTUNITYZONEBENEFITS = "opportunity_zone_benefits"
    REGIONALDEVELOPMENT = "regional_development"
    SCIENCETECHNOLOGYANDOTHERRESEARCHANDDEVELOPMENT = (
        "science_technology_and_other_research_and_development"
    )
    TRANSPORTATION = "transportation"
    AFFORDABLECAREACT = "affordable_care_act"
    OTHER = "other"

    def list():
        """Lists all category values.

        :return: A list of all category values.
        :rtype: list
        """
        return list(
            map(lambda x: x.value, FundingCategoryFilterV1OneOf._member_map_.values())
        )


@JsonMap({})
class FundingCategoryFilterV1(BaseModel):
    """FundingCategoryFilterV1

    :param one_of: one_of, defaults to None
    :type one_of: List[FundingCategoryFilterV1OneOf], optional
    """

    def __init__(self, one_of: List[FundingCategoryFilterV1OneOf] = SENTINEL, **kwargs):
        """FundingCategoryFilterV1

        :param one_of: one_of, defaults to None
        :type one_of: List[FundingCategoryFilterV1OneOf], optional
        """
        if one_of is not SENTINEL:
            self.one_of = self._define_list(one_of, FundingCategoryFilterV1OneOf)
        self._kwargs = kwargs
