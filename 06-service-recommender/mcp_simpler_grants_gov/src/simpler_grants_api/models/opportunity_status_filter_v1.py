# This file was generated by liblab | https://liblab.com/

from enum import Enum
from typing import List
from .utils.json_map import JsonMap
from .utils.base_model import BaseModel
from .utils.sentinel import SENTINEL


class OpportunityStatusFilterV1OneOf(Enum):
    """An enumeration representing different categories.

    :cvar FORECASTED: "forecasted"
    :vartype FORECASTED: str
    :cvar POSTED: "posted"
    :vartype POSTED: str
    :cvar CLOSED: "closed"
    :vartype CLOSED: str
    :cvar ARCHIVED: "archived"
    :vartype ARCHIVED: str
    """

    FORECASTED = "forecasted"
    POSTED = "posted"
    CLOSED = "closed"
    ARCHIVED = "archived"

    def list():
        """Lists all category values.

        :return: A list of all category values.
        :rtype: list
        """
        return list(
            map(lambda x: x.value, OpportunityStatusFilterV1OneOf._member_map_.values())
        )


@JsonMap({})
class OpportunityStatusFilterV1(BaseModel):
    """OpportunityStatusFilterV1

    :param one_of: one_of, defaults to None
    :type one_of: List[OpportunityStatusFilterV1OneOf], optional
    """

    def __init__(
        self, one_of: List[OpportunityStatusFilterV1OneOf] = SENTINEL, **kwargs
    ):
        """OpportunityStatusFilterV1

        :param one_of: one_of, defaults to None
        :type one_of: List[OpportunityStatusFilterV1OneOf], optional
        """
        if one_of is not SENTINEL:
            self.one_of = self._define_list(one_of, OpportunityStatusFilterV1OneOf)
        self._kwargs = kwargs
