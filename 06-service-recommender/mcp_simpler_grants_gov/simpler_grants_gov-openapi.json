{
  "components": {
    "schemas": {
      "AgencyFilterV1": {
        "properties": {
          "active": {
            "type": "boolean"
          },
          "agency_id": {
            "example": "123e4567-e89b-12d3-a456-426614174000",
            "format": "uuid",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AgencyListRequest": {
        "properties": {
          "filters": {
            "$ref": "#/components/schemas/AgencyFilterV1",
            "type": [
              "object"
            ]
          },
          "pagination": {
            "$ref": "#/components/schemas/AgencyPaginationV1",
            "type": [
              "object"
            ]
          }
        },
        "required": [
          "pagination"
        ],
        "type": "object"
      },
      "AgencyListResponse": {
        "properties": {
          "data": {
            "description": "A list of agency records",
            "items": {
              "$ref": "#/components/schemas/AgencyResponse",
              "type": [
                "object"
              ]
            },
            "type": "array"
          },
          "message": {
            "description": "The message to return",
            "example": "Success",
            "type": "string"
          },
          "pagination_info": {
            "$ref": "#/components/schemas/PaginationInfo",
            "description": "The pagination information for paginated endpoints",
            "type": [
              "object"
            ]
          },
          "status_code": {
            "description": "The HTTP status code",
            "example": 200,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "AgencyOppSearchFilterV1": {
        "properties": {
          "one_of": {
            "items": {
              "example": "USAID",
              "minLength": 2,
              "type": "string"
            },
            "minItems": 1,
            "type": "array"
          }
        },
        "type": "object"
      },
      "AgencyPaginationV1": {
        "properties": {
          "page_offset": {
            "description": "The page number to fetch, starts counting from 1",
            "example": 1,
            "minimum": 1,
            "type": "integer"
          },
          "page_size": {
            "description": "The size of the page to fetch",
            "example": 25,
            "maximum": 5000,
            "minimum": 1,
            "type": "integer"
          },
          "sort_order": {
            "default": [
              {
                "order_by": "agency_code",
                "sort_direction": "ascending"
              }
            ],
            "description": "The list of sorting rules",
            "items": {
              "$ref": "#/components/schemas/SortOrderAgencyPaginationV1",
              "type": [
                "object"
              ]
            },
            "maxItems": 5,
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "page_offset",
          "page_size"
        ],
        "type": "object"
      },
      "AgencyResponse": {
        "properties": {
          "agency_code": {
            "type": "string"
          },
          "agency_id": {
            "example": "123e4567-e89b-12d3-a456-426614174000",
            "format": "uuid",
            "type": "string"
          },
          "agency_name": {
            "type": "string"
          },
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "top_level_agency": {
            "$ref": "#/components/schemas/AgencyResponse",
            "type": [
              "object"
            ]
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AgencySearchFilterV1": {
        "properties": {
          "has_active_opportunity": {
            "$ref": "#/components/schemas/HasActiveOpportunityFilterV1",
            "type": [
              "object"
            ]
          },
          "is_test_agency": {
            "$ref": "#/components/schemas/IsTestAgencyFilterV1",
            "type": [
              "object"
            ]
          },
          "opportunity_statuses": {
            "$ref": "#/components/schemas/OpportunityStatusesFilterV1",
            "type": [
              "object"
            ]
          }
        },
        "type": "object"
      },
      "AgencySearchPaginationV1": {
        "properties": {
          "page_offset": {
            "description": "The page number to fetch, starts counting from 1",
            "example": 1,
            "minimum": 1,
            "type": "integer"
          },
          "page_size": {
            "description": "The size of the page to fetch",
            "example": 25,
            "maximum": 5000,
            "minimum": 1,
            "type": "integer"
          },
          "sort_order": {
            "default": [
              {
                "order_by": "agency_code",
                "sort_direction": "ascending"
              }
            ],
            "description": "The list of sorting rules",
            "items": {
              "$ref": "#/components/schemas/SortOrderAgencySearchPaginationV1",
              "type": [
                "object"
              ]
            },
            "maxItems": 5,
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "page_offset",
          "page_size"
        ],
        "type": "object"
      },
      "AgencySearchRequest": {
        "properties": {
          "filters": {
            "$ref": "#/components/schemas/AgencySearchFilterV1",
            "type": [
              "object"
            ]
          },
          "pagination": {
            "$ref": "#/components/schemas/AgencySearchPaginationV1",
            "type": [
              "object"
            ]
          },
          "query": {
            "description": "Query string which searches against several text fields",
            "example": "research",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "query_operator": {
            "default": "OR",
            "description": "Query operator for combining search conditions",
            "enum": [
              "AND",
              "OR"
            ],
            "example": "OR",
            "type": [
              "string"
            ]
          }
        },
        "required": [
          "pagination"
        ],
        "type": "object"
      },
      "AgencySearchResponseV1": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/AgencyV1"
            },
            "type": "array"
          },
          "message": {
            "description": "The message to return",
            "example": "Success",
            "type": "string"
          },
          "pagination_info": {
            "$ref": "#/components/schemas/PaginationInfo",
            "description": "The pagination information for paginated endpoints",
            "type": [
              "object"
            ]
          },
          "status_code": {
            "description": "The HTTP status code",
            "example": 200,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "AgencyV1": {
        "properties": {
          "agency_code": {
            "description": "The agency who created the opportunity",
            "example": "ABC",
            "type": "string"
          },
          "agency_id": {
            "description": "The internal ID of the agency",
            "example": "123e4567-e89b-12d3-a456-426614174000",
            "format": "uuid",
            "type": "string"
          },
          "agency_name": {
            "description": "The name of the agency who created the opportunity",
            "example": "Department of Examples",
            "type": "string"
          },
          "created_at": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "is_test_agency": {
            "description": "Indicates if the agency is a test agency.",
            "example": false,
            "type": "boolean"
          },
          "opportunity_statuses": {
            "description": "List of opportunity statuses the agency is linked with.",
            "example": [
              "posted"
            ],
            "items": {
              "enum": [
                "forecasted",
                "posted",
                "closed",
                "archived"
              ],
              "type": [
                "string"
              ]
            },
            "type": "array"
          },
          "top_level_agency": {
            "type": [
              "string",
              "null"
            ]
          },
          "updated_at": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ApplicantTypeFilterV1": {
        "properties": {
          "one_of": {
            "items": {
              "enum": [
                "state_governments",
                "county_governments",
                "city_or_township_governments",
                "special_district_governments",
                "independent_school_districts",
                "public_and_state_institutions_of_higher_education",
                "private_institutions_of_higher_education",
                "federally_recognized_native_american_tribal_governments",
                "other_native_american_tribal_organizations",
                "public_and_indian_housing_authorities",
                "nonprofits_non_higher_education_with_501c3",
                "nonprofits_non_higher_education_without_501c3",
                "individuals",
                "for_profit_organizations_other_than_small_businesses",
                "small_businesses",
                "other",
                "unrestricted"
              ],
              "type": [
                "string"
              ]
            },
            "minItems": 1,
            "type": "array"
          }
        },
        "type": "object"
      },
      "AssistanceListingNumberFilterV1": {
        "properties": {
          "one_of": {
            "items": {
              "example": "45.149",
              "pattern": "^\\d{2}\\.\\d{2,3}$",
              "type": "string"
            },
            "minItems": 1,
            "type": "array"
          }
        },
        "type": "object"
      },
      "AwardCeilingFilterV1": {
        "properties": {
          "max": {
            "example": 10000000,
            "minimum": 0,
            "type": [
              "integer",
              "null"
            ]
          },
          "min": {
            "example": 0,
            "minimum": 0,
            "type": [
              "integer",
              "null"
            ]
          }
        },
        "type": "object"
      },
      "AwardFloorFilterV1": {
        "properties": {
          "max": {
            "example": 10000,
            "minimum": 0,
            "type": [
              "integer",
              "null"
            ]
          },
          "min": {
            "example": 0,
            "minimum": 0,
            "type": [
              "integer",
              "null"
            ]
          }
        },
        "type": "object"
      },
      "CloseDateFilterV1": {
        "properties": {
          "end_date": {
            "format": "date",
            "type": [
              "string",
              "null"
            ]
          },
          "end_date_relative": {
            "maximum": 1000000,
            "minimum": -1000000,
            "type": [
              "integer",
              "null"
            ]
          },
          "start_date": {
            "format": "date",
            "type": [
              "string",
              "null"
            ]
          },
          "start_date_relative": {
            "maximum": 1000000,
            "minimum": -1000000,
            "type": [
              "integer",
              "null"
            ]
          }
        },
        "type": "object"
      },
      "CompetitionAlpha": {
        "properties": {
          "closing_date": {
            "description": "The closing date of the competition, the last day applications are accepted",
            "format": "date",
            "type": "string"
          },
          "competition_forms": {
            "items": {
              "$ref": "#/components/schemas/CompetitionFormAlpha",
              "type": [
                "object"
              ]
            },
            "type": "array"
          },
          "competition_id": {
            "description": "The competition ID",
            "example": "123e4567-e89b-12d3-a456-426614174000",
            "format": "uuid",
            "type": "string"
          },
          "competition_instructions": {
            "description": "List of instruction files associated with this competition",
            "items": {
              "$ref": "#/components/schemas/CompetitionInstructionAlpha",
              "type": [
                "object"
              ]
            },
            "type": "array"
          },
          "competition_title": {
            "description": "The title of the competition",
            "example": "Proposal for Advanced Research",
            "type": "string"
          },
          "contact_info": {
            "description": "Contact info getting assistance with the competition",
            "example": "Bob Smith\nFakeMail@fake.com",
            "type": "string"
          },
          "is_open": {
            "description": "Whether the competition is open and accepting applications",
            "type": "boolean"
          },
          "open_to_applicants": {
            "items": {
              "enum": [
                "individual",
                "organization"
              ],
              "type": [
                "string"
              ]
            },
            "type": "array"
          },
          "opening_date": {
            "description": "The opening date of the competition, the first day applications are accepted",
            "format": "date",
            "type": "string"
          },
          "opportunity_assistance_listing": {
            "$ref": "#/components/schemas/OpportunityAssistanceListingV1",
            "type": [
              "object"
            ]
          },
          "opportunity_id": {
            "description": "The opportunity ID that the competition is associated with",
            "example": "123e4567-e89b-12d3-a456-426614174000",
            "format": "uuid",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CompetitionFormAlpha": {
        "properties": {
          "form": {
            "$ref": "#/components/schemas/FormAlpha",
            "type": [
              "object"
            ]
          },
          "is_required": {
            "description": "Whether the form is required for all applications to the competition",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "CompetitionInstructionAlpha": {
        "properties": {
          "created_at": {
            "description": "The date and time when the instruction was created",
            "format": "date-time",
            "type": "string"
          },
          "download_path": {
            "description": "The URL to download the instruction file",
            "example": "https://cdn.example.com/competition-instructions/file.pdf",
            "type": "string"
          },
          "file_name": {
            "description": "The name of the instruction file",
            "example": "competition_instructions.pdf",
            "type": "string"
          },
          "updated_at": {
            "description": "The date and time when the instruction was last updated",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DateRange": {
        "properties": {
          "end_date": {
            "format": "date",
            "type": [
              "string",
              "null"
            ]
          },
          "start_date": {
            "format": "date",
            "type": [
              "string",
              "null"
            ]
          }
        },
        "required": [
          "end_date",
          "start_date"
        ],
        "type": "object"
      },
      "ErrorResponse": {
        "properties": {
          "data": {
            "description": "Additional data that might be useful in resolving an error (see specific endpoints for details, this is used infrequently)",
            "example": {}
          },
          "errors": {
            "example": [],
            "items": {
              "$ref": "#/components/schemas/ValidationIssue",
              "type": [
                "object"
              ]
            },
            "type": "array"
          },
          "internal_request_id": {
            "description": "An internal tracking ID",
            "example": "550e8400-e29b-41d4-a716-446655440000",
            "type": "string"
          },
          "message": {
            "description": "General description of the error",
            "example": "Error",
            "type": "string"
          },
          "status_code": {
            "description": "The HTTP status code of the error",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "EstimatedTotalProgramFundingFilterV1": {
        "properties": {
          "max": {
            "example": 10000000,
            "minimum": 0,
            "type": [
              "integer",
              "null"
            ]
          },
          "min": {
            "example": 0,
            "minimum": 0,
            "type": [
              "integer",
              "null"
            ]
          }
        },
        "type": "object"
      },
      "ExpectedNumberAwardsFilterV1": {
        "properties": {
          "max": {
            "example": 25,
            "minimum": 0,
            "type": [
              "integer",
              "null"
            ]
          },
          "min": {
            "example": 0,
            "minimum": 0,
            "type": [
              "integer",
              "null"
            ]
          }
        },
        "type": "object"
      },
      "ExperimentalV1": {
        "properties": {
          "scoring_rule": {
            "default": "default",
            "description": "Scoring rule to query against OpenSearch",
            "enum": [
              "default",
              "expanded",
              "agency",
              "attachment_only"
            ],
            "type": [
              "string"
            ]
          }
        },
        "type": "object"
      },
      "ExtractMetadataFilterV1": {
        "properties": {
          "created_at": {
            "$ref": "#/components/schemas/DateRange",
            "type": [
              "object"
            ]
          },
          "extract_type": {
            "description": "The type of extract to filter by",
            "enum": [
              "opportunities_json",
              "opportunities_csv"
            ],
            "example": "opportunities_json",
            "type": [
              "string",
              "null"
            ]
          }
        },
        "type": "object"
      },
      "ExtractMetadataListResponse": {
        "properties": {
          "data": {
            "description": "A list of extract metadata records",
            "items": {
              "$ref": "#/components/schemas/ExtractMetadataResponse",
              "type": [
                "object"
              ]
            },
            "type": "array"
          },
          "message": {
            "description": "The message to return",
            "example": "Success",
            "type": "string"
          },
          "pagination_info": {
            "$ref": "#/components/schemas/PaginationInfo",
            "description": "The pagination information for paginated endpoints",
            "type": [
              "object"
            ]
          },
          "status_code": {
            "description": "The HTTP status code",
            "example": 200,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ExtractMetadataPaginationV1": {
        "properties": {
          "page_offset": {
            "description": "The page number to fetch, starts counting from 1",
            "example": 1,
            "minimum": 1,
            "type": "integer"
          },
          "page_size": {
            "description": "The size of the page to fetch",
            "example": 25,
            "maximum": 5000,
            "minimum": 1,
            "type": "integer"
          },
          "sort_order": {
            "description": "The list of sorting rules",
            "items": {
              "$ref": "#/components/schemas/SortOrderExtractMetadataPaginationV1",
              "type": [
                "object"
              ]
            },
            "maxItems": 5,
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "page_offset",
          "page_size",
          "sort_order"
        ],
        "type": "object"
      },
      "ExtractMetadataRequest": {
        "properties": {
          "data": {
            "description": "The REST resource object"
          },
          "filters": {
            "$ref": "#/components/schemas/ExtractMetadataFilterV1",
            "type": [
              "object"
            ]
          },
          "message": {
            "description": "The message to return",
            "example": "Success",
            "type": "string"
          },
          "pagination": {
            "$ref": "#/components/schemas/ExtractMetadataPaginationV1",
            "type": [
              "object"
            ]
          },
          "status_code": {
            "description": "The HTTP status code",
            "example": 200,
            "type": "integer"
          }
        },
        "required": [
          "pagination"
        ],
        "type": "object"
      },
      "ExtractMetadataResponse": {
        "properties": {
          "created_at": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "download_path": {
            "description": "The file's download path",
            "type": "string"
          },
          "extract_metadata_id": {
            "description": "The ID of the extract metadata",
            "example": "123e4567-e89b-12d3-a456-426614174000",
            "format": "uuid",
            "type": "string"
          },
          "extract_type": {
            "description": "The type of extract",
            "example": "opportunity_data_extract",
            "type": "string"
          },
          "file_size_bytes": {
            "description": "The size of the file in bytes",
            "example": 1024,
            "type": "integer"
          },
          "updated_at": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "FormAlpha": {
        "properties": {
          "form_id": {
            "description": "The primary key ID of the form",
            "example": "123e4567-e89b-12d3-a456-426614174000",
            "format": "uuid",
            "type": "string"
          },
          "form_instruction": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FormInstruction"
              },
              {
                "type": "null"
              }
            ],
            "description": "The instruction file for the form, if available",
            "type": [
              "object",
              "null"
            ]
          },
          "form_json_schema": {
            "additionalProperties": {},
            "description": "The JSON Schema representation of the form",
            "example": {
              "properties": {
                "ApplicationNumber": {
                  "maxLength": 120,
                  "minLength": 1,
                  "title": "Application number",
                  "type": "number"
                },
                "Date": {
                  "format": "date",
                  "title": "Date of application ",
                  "type": "string"
                },
                "Description": {
                  "maxLength": 15,
                  "minLength": 0,
                  "title": "Description for application",
                  "type": "string"
                },
                "Title": {
                  "maxLength": 60,
                  "minLength": 1,
                  "title": "Title",
                  "type": "string"
                }
              },
              "title": "Test form for testing",
              "type": "object"
            },
            "type": "object"
          },
          "form_name": {
            "description": "The name of the form",
            "example": "ABC Project Form",
            "type": "string"
          },
          "form_ui_schema": {
            "description": "The UI Schema of the form for front-end rendering",
            "example": [
              {
                "definition": "/properties/Title",
                "type": "field"
              },
              {
                "definition": "/properties/Description",
                "type": "field"
              },
              {
                "definition": "/properties/ApplicationNumber",
                "type": "field"
              },
              {
                "definition": "/properties/Date",
                "type": "field"
              }
            ]
          }
        },
        "type": "object"
      },
      "FormInstruction": {
        "properties": {
          "created_at": {
            "description": "The timestamp when the form instruction was created",
            "format": "date-time",
            "type": "string"
          },
          "download_path": {
            "description": "The download URL for the form instruction file",
            "type": "string"
          },
          "file_name": {
            "description": "The name of the form instruction file",
            "example": "instructions.pdf",
            "type": "string"
          },
          "updated_at": {
            "description": "The timestamp when the form instruction was last updated",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "FundingCategoryFilterV1": {
        "properties": {
          "one_of": {
            "items": {
              "enum": [
                "recovery_act",
                "agriculture",
                "arts",
                "business_and_commerce",
                "community_development",
                "consumer_protection",
                "disaster_prevention_and_relief",
                "education",
                "employment_labor_and_training",
                "energy",
                "environment",
                "food_and_nutrition",
                "health",
                "housing",
                "humanities",
                "infrastructure_investment_and_jobs_act",
                "information_and_statistics",
                "income_security_and_social_services",
                "law_justice_and_legal_services",
                "natural_resources",
                "opportunity_zone_benefits",
                "regional_development",
                "science_technology_and_other_research_and_development",
                "transportation",
                "affordable_care_act",
                "other"
              ],
              "type": [
                "string"
              ]
            },
            "minItems": 1,
            "type": "array"
          }
        },
        "type": "object"
      },
      "FundingInstrumentFilterV1": {
        "properties": {
          "one_of": {
            "items": {
              "enum": [
                "cooperative_agreement",
                "grant",
                "procurement_contract",
                "other"
              ],
              "type": [
                "string"
              ]
            },
            "minItems": 1,
            "type": "array"
          }
        },
        "type": "object"
      },
      "HasActiveOpportunityFilterV1": {
        "properties": {
          "one_of": {
            "items": {
              "example": true,
              "type": "boolean"
            },
            "type": [
              "array",
              "null"
            ]
          }
        },
        "type": "object"
      },
      "HealthcheckMetadata": {
        "properties": {
          "commit_link": {
            "description": "A github link to the latest deployed commit",
            "example": "https://github.com/HHS/simpler-grants-gov/commit/main",
            "type": "string"
          },
          "commit_sha": {
            "description": "The github commit sha for the latest deployed commit",
            "example": "ffaca647223e0b6e54344122eefa73401f5ec131",
            "type": "string"
          },
          "deploy_whoami": {
            "description": "The latest user to deploy the application",
            "example": "runner",
            "type": "string"
          },
          "last_deploy_time": {
            "description": "Latest deploy time in US/Eastern timezone",
            "format": "date-time",
            "type": "string"
          },
          "release_notes_link": {
            "description": "A github link to the release notes - direct if the latest deploy was a release",
            "example": "https://github.com/HHS/simpler-grants-gov/releases",
            "type": "string"
          }
        },
        "type": "object"
      },
      "HealthcheckResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/HealthcheckMetadata",
            "type": [
              "object"
            ]
          },
          "message": {
            "description": "The message to return",
            "example": "Success",
            "type": "string"
          },
          "status_code": {
            "description": "The HTTP status code",
            "example": 200,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "IsCostSharingFilterV1": {
        "properties": {
          "one_of": {
            "items": {
              "example": true,
              "type": "boolean"
            },
            "type": [
              "array",
              "null"
            ]
          }
        },
        "type": "object"
      },
      "IsTestAgencyFilterV1": {
        "properties": {
          "one_of": {
            "items": {
              "example": true,
              "type": "boolean"
            },
            "type": [
              "array",
              "null"
            ]
          }
        },
        "type": "object"
      },
      "OpportunityAssistanceListingV1": {
        "properties": {
          "assistance_listing_number": {
            "description": "The assistance listing number, see https://sam.gov/content/assistance-listings for more detail",
            "example": "43.012",
            "type": [
              "string",
              "null"
            ]
          },
          "program_title": {
            "description": "The name of the program, see https://sam.gov/content/assistance-listings for more detail",
            "example": "Space Technology",
            "type": [
              "string",
              "null"
            ]
          }
        },
        "type": "object"
      },
      "OpportunityAttachmentV1": {
        "properties": {
          "created_at": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "download_path": {
            "description": "The file's download path",
            "type": "string"
          },
          "file_description": {
            "description": "A description of the attachment",
            "example": "The full announcement NOFO",
            "type": "string"
          },
          "file_name": {
            "description": "The name of the attachment file",
            "example": "my_NOFO.pdf",
            "type": "string"
          },
          "file_size_bytes": {
            "description": "The size of the file in bytes",
            "example": 1024,
            "type": "integer"
          },
          "mime_type": {
            "description": "The MIME type of the attachment",
            "example": "application/pdf",
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "OpportunityFacetV1": {
        "properties": {
          "agency": {
            "additionalProperties": {
              "type": "integer"
            },
            "description": "The counts of agency values in the full response",
            "example": {
              "DOC": 3,
              "USAID": 4
            },
            "type": "object"
          },
          "applicant_type": {
            "additionalProperties": {
              "type": "integer"
            },
            "description": "The counts of applicant_type values in the full response",
            "example": {
              "city_or_township_governments": 1,
              "county_governments": 2,
              "state_governments": 3
            },
            "type": "object"
          },
          "funding_category": {
            "additionalProperties": {
              "type": "integer"
            },
            "description": "The counts of funding_category values in the full response",
            "example": {
              "agriculture": 5,
              "arts": 3,
              "recovery_act": 2
            },
            "type": "object"
          },
          "funding_instrument": {
            "additionalProperties": {
              "type": "integer"
            },
            "description": "The counts of funding_instrument values in the full response",
            "example": {
              "cooperative_agreement": 4,
              "grant": 3
            },
            "type": "object"
          },
          "is_cost_sharing": {
            "additionalProperties": {
              "type": "integer"
            },
            "description": "The counts of is_cost_sharing values in the full response",
            "example": {
              "false": 3,
              "true": 1
            },
            "type": "object"
          },
          "opportunity_status": {
            "additionalProperties": {
              "type": "integer"
            },
            "description": "The counts of opportunity_status values in the full response",
            "example": {
              "forecasted": 2,
              "posted": 1
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "OpportunityGetResponseV1": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/OpportunityWithAttachmentsV1",
            "type": [
              "object"
            ]
          },
          "message": {
            "description": "The message to return",
            "example": "Success",
            "type": "string"
          },
          "status_code": {
            "description": "The HTTP status code",
            "example": 200,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "OpportunityPaginationV1": {
        "properties": {
          "page_offset": {
            "description": "The page number to fetch, starts counting from 1",
            "example": 1,
            "minimum": 1,
            "type": "integer"
          },
          "page_size": {
            "description": "The size of the page to fetch",
            "example": 25,
            "maximum": 5000,
            "minimum": 1,
            "type": "integer"
          },
          "sort_order": {
            "default": [
              {
                "order_by": "opportunity_id",
                "sort_direction": "descending"
              }
            ],
            "description": "The list of sorting rules",
            "items": {
              "$ref": "#/components/schemas/SortOrderOpportunityPaginationV1",
              "type": [
                "object"
              ]
            },
            "maxItems": 5,
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "page_offset",
          "page_size"
        ],
        "type": "object"
      },
      "OpportunitySearchFilterV1": {
        "properties": {
          "agency": {
            "$ref": "#/components/schemas/AgencyOppSearchFilterV1",
            "type": [
              "object"
            ]
          }
        },
        "type": "object"
      },
      "OpportunitySearchRequestV1": {
        "properties": {
          "experimental": {
            "$ref": "#/components/schemas/ExperimentalV1",
            "type": [
              "object"
            ]
          },
          "filters": {
            "$ref": "#/components/schemas/OpportunitySearchFilterV1",
            "type": [
              "object"
            ]
          },
          "format": {
            "default": "json",
            "description": "The format of the response",
            "enum": [
              "json",
              "csv"
            ],
            "type": [
              "string"
            ]
          },
          "pagination": {
            "$ref": "#/components/schemas/OpportunityPaginationV1",
            "type": [
              "object"
            ]
          },
          "query": {
            "description": "Query string which searches against several text fields",
            "example": "research",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "query_operator": {
            "default": "AND",
            "description": "Query operator for combining search conditions",
            "enum": [
              "AND",
              "OR"
            ],
            "example": "OR",
            "type": [
              "string"
            ]
          }
        },
        "required": [
          "pagination"
        ],
        "type": "object"
      },
      "OpportunitySearchResponseV1": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/OpportunityV1"
            },
            "type": "array"
          },
          "facet_counts": {
            "$ref": "#/components/schemas/OpportunityFacetV1",
            "description": "Counts of filter/facet values in the full response",
            "type": [
              "object"
            ]
          },
          "message": {
            "description": "The message to return",
            "example": "Success",
            "type": "string"
          },
          "pagination_info": {
            "$ref": "#/components/schemas/PaginationInfo",
            "description": "The pagination information for paginated endpoints",
            "type": [
              "object"
            ]
          },
          "status_code": {
            "description": "The HTTP status code",
            "example": 200,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "OpportunityStatusFilterV1": {
        "properties": {
          "one_of": {
            "items": {
              "enum": [
                "forecasted",
                "posted",
                "closed",
                "archived"
              ],
              "type": [
                "string"
              ]
            },
            "minItems": 1,
            "type": "array"
          }
        },
        "type": "object"
      },
      "OpportunityStatusesFilterV1": {
        "properties": {
          "one_of": {
            "items": {
              "example": "archived",
              "type": "string"
            },
            "minItems": 1,
            "type": "array"
          }
        },
        "type": "object"
      },
      "OpportunitySummaryV1": {
        "properties": {
          "additional_info_url": {
            "description": "A URL to a website that can provide additional information about the opportunity",
            "example": "grants.gov",
            "type": [
              "string",
              "null"
            ]
          },
          "additional_info_url_description": {
            "description": "The text to display for the additional_info_url link",
            "example": "Click me for more info",
            "type": [
              "string",
              "null"
            ]
          },
          "agency_contact_description": {
            "description": "Information regarding contacting the agency who owns the opportunity",
            "example": "For more information, reach out to Jane Smith at agency US-ABC",
            "type": [
              "string",
              "null"
            ]
          },
          "agency_email_address": {
            "description": "The contact email of the agency who owns the opportunity",
            "example": "fake_email@grants.gov",
            "type": [
              "string",
              "null"
            ]
          },
          "agency_email_address_description": {
            "description": "The text for the link to the agency email address",
            "example": "Click me to email the agency",
            "type": [
              "string",
              "null"
            ]
          },
          "applicant_eligibility_description": {
            "description": "Additional information about the types of applicants that are eligible",
            "example": "All types of domestic applicants are eligible to apply",
            "type": [
              "string",
              "null"
            ]
          },
          "applicant_types": {
            "items": {
              "enum": [
                "state_governments",
                "county_governments",
                "city_or_township_governments",
                "special_district_governments",
                "independent_school_districts",
                "public_and_state_institutions_of_higher_education",
                "private_institutions_of_higher_education",
                "federally_recognized_native_american_tribal_governments",
                "other_native_american_tribal_organizations",
                "public_and_indian_housing_authorities",
                "nonprofits_non_higher_education_with_501c3",
                "nonprofits_non_higher_education_without_501c3",
                "individuals",
                "for_profit_organizations_other_than_small_businesses",
                "small_businesses",
                "other",
                "unrestricted"
              ],
              "type": [
                "string"
              ]
            },
            "type": "array"
          },
          "archive_date": {
            "description": "When the opportunity will be archived",
            "format": "date",
            "type": [
              "string",
              "null"
            ]
          },
          "award_ceiling": {
            "description": "The maximum amount an opportunity would award",
            "example": 100000,
            "type": [
              "integer",
              "null"
            ]
          },
          "award_floor": {
            "description": "The minimum amount an opportunity would award",
            "example": 10000,
            "type": [
              "integer",
              "null"
            ]
          },
          "close_date": {
            "description": "The date that the opportunity will close - only set if is_forecast=False",
            "format": "date",
            "type": [
              "string",
              "null"
            ]
          },
          "close_date_description": {
            "description": "Optional details regarding the close date",
            "example": "Proposals are due earlier than usual.",
            "type": [
              "string",
              "null"
            ]
          },
          "created_at": {
            "description": "When the opportunity summary was created",
            "format": "date-time",
            "type": "string"
          },
          "estimated_total_program_funding": {
            "description": "The total program funding of the opportunity in US Dollars",
            "example": 10000000,
            "type": [
              "integer",
              "null"
            ]
          },
          "expected_number_of_awards": {
            "description": "The number of awards the opportunity is expected to award",
            "example": 10,
            "type": [
              "integer",
              "null"
            ]
          },
          "fiscal_year": {
            "description": "Forecasted opportunity only. The fiscal year the project is expected to be funded and launched",
            "type": [
              "integer",
              "null"
            ]
          },
          "forecasted_award_date": {
            "description": "Forecasted opportunity only. The date the grantor plans to award the opportunity.",
            "format": "date",
            "type": [
              "string",
              "null"
            ]
          },
          "forecasted_close_date": {
            "description": "Forecasted opportunity only. The date the opportunity is expected to be close once posted.",
            "format": "date",
            "type": [
              "string",
              "null"
            ]
          },
          "forecasted_close_date_description": {
            "description": "Forecasted opportunity only. Optional details regarding the forecasted closed date.",
            "example": "Proposals will probably be due on this date",
            "type": [
              "string",
              "null"
            ]
          },
          "forecasted_post_date": {
            "description": "Forecasted opportunity only. The date the opportunity is expected to be posted, and transition out of being a forecast",
            "format": "date",
            "type": [
              "string",
              "null"
            ]
          },
          "forecasted_project_start_date": {
            "description": "Forecasted opportunity only. The date the grantor expects the award recipient should start their project",
            "format": "date",
            "type": [
              "string",
              "null"
            ]
          },
          "funding_categories": {
            "items": {
              "enum": [
                "recovery_act",
                "agriculture",
                "arts",
                "business_and_commerce",
                "community_development",
                "consumer_protection",
                "disaster_prevention_and_relief",
                "education",
                "employment_labor_and_training",
                "energy",
                "environment",
                "food_and_nutrition",
                "health",
                "housing",
                "humanities",
                "infrastructure_investment_and_jobs_act",
                "information_and_statistics",
                "income_security_and_social_services",
                "law_justice_and_legal_services",
                "natural_resources",
                "opportunity_zone_benefits",
                "regional_development",
                "science_technology_and_other_research_and_development",
                "transportation",
                "affordable_care_act",
                "other"
              ],
              "type": [
                "string"
              ]
            },
            "type": "array"
          },
          "funding_category_description": {
            "description": "Additional information about the funding category",
            "example": "Economic Support",
            "type": [
              "string",
              "null"
            ]
          },
          "funding_instruments": {
            "items": {
              "enum": [
                "cooperative_agreement",
                "grant",
                "procurement_contract",
                "other"
              ],
              "type": [
                "string"
              ]
            },
            "type": "array"
          },
          "is_cost_sharing": {
            "description": "Whether or not the opportunity has a cost sharing/matching requirement",
            "type": [
              "boolean",
              "null"
            ]
          },
          "is_forecast": {
            "description": "Whether the opportunity is forecasted, that is, the information is only an estimate and not yet official",
            "example": false,
            "type": "boolean"
          },
          "post_date": {
            "description": "The date the opportunity was posted",
            "format": "date",
            "type": [
              "string",
              "null"
            ]
          },
          "summary_description": {
            "description": "The summary of the opportunity",
            "example": "This opportunity aims to unravel the mysteries of the universe.",
            "type": [
              "string",
              "null"
            ]
          },
          "updated_at": {
            "description": "When the opportunity summary was last updated",
            "format": "date-time",
            "type": "string"
          },
          "version_number": {
            "description": "The version number of the opportunity summary",
            "example": 1,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "OpportunityV1": {
        "properties": {
          "agency": {
            "description": "DEPRECATED - use: agency_code",
            "example": "US-ABC",
            "type": [
              "string",
              "null"
            ]
          },
          "agency_code": {
            "description": "The agency who created the opportunity",
            "example": "US-ABC",
            "type": [
              "string",
              "null"
            ]
          },
          "agency_name": {
            "description": "The name of the agency who created the opportunity",
            "example": "Department of Examples",
            "type": [
              "string",
              "null"
            ]
          },
          "category": {
            "description": "The opportunity category",
            "enum": [
              "discretionary",
              "mandatory",
              "continuation",
              "earmark",
              "other"
            ],
            "example": "discretionary",
            "type": [
              "string",
              "null"
            ]
          },
          "category_explanation": {
            "description": "Explanation of the category when the category is 'O' (other)",
            "example": null,
            "type": [
              "string",
              "null"
            ]
          },
          "created_at": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "legacy_opportunity_id": {
            "description": "The internal legacy ID of the opportunity",
            "example": 12345,
            "type": "integer"
          },
          "opportunity_assistance_listings": {
            "items": {
              "$ref": "#/components/schemas/OpportunityAssistanceListingV1",
              "type": [
                "object"
              ]
            },
            "type": "array"
          },
          "opportunity_id": {
            "description": "The internal ID of the opportunity",
            "example": "123e4567-e89b-12d3-a456-426614174000",
            "format": "uuid",
            "type": "string"
          },
          "opportunity_number": {
            "description": "The funding opportunity number",
            "example": "ABC-123-XYZ-001",
            "type": [
              "string",
              "null"
            ]
          },
          "opportunity_status": {
            "description": "The current status of the opportunity",
            "enum": [
              "forecasted",
              "posted",
              "closed",
              "archived"
            ],
            "example": "posted",
            "type": [
              "string"
            ]
          },
          "opportunity_title": {
            "description": "The title of the opportunity",
            "example": "Research into conservation techniques",
            "type": [
              "string",
              "null"
            ]
          },
          "summary": {
            "$ref": "#/components/schemas/OpportunitySummaryV1",
            "type": [
              "object"
            ]
          },
          "top_level_agency_name": {
            "description": "The name of the top level agency who created the oppportunity",
            "example": "Department of Examples",
            "type": [
              "string",
              "null"
            ]
          },
          "updated_at": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "OpportunityWithAttachmentsV1": {
        "properties": {
          "agency": {
            "description": "DEPRECATED - use: agency_code",
            "example": "US-ABC",
            "type": [
              "string",
              "null"
            ]
          },
          "agency_code": {
            "description": "The agency who created the opportunity",
            "example": "US-ABC",
            "type": [
              "string",
              "null"
            ]
          },
          "agency_name": {
            "description": "The name of the agency who created the opportunity",
            "example": "Department of Examples",
            "type": [
              "string",
              "null"
            ]
          },
          "attachments": {
            "description": "List of attachments associated with the opportunity",
            "items": {
              "$ref": "#/components/schemas/OpportunityAttachmentV1",
              "type": [
                "object"
              ]
            },
            "type": "array"
          },
          "category": {
            "description": "The opportunity category",
            "enum": [
              "discretionary",
              "mandatory",
              "continuation",
              "earmark",
              "other"
            ],
            "example": "discretionary",
            "type": [
              "string",
              "null",
              "null"
            ]
          },
          "category_explanation": {
            "description": "Explanation of the category when the category is 'O' (other)",
            "example": null,
            "type": [
              "string",
              "null"
            ]
          },
          "competitions": {
            "description": "List of competitions associated with the opportunity",
            "items": {
              "$ref": "#/components/schemas/CompetitionAlpha",
              "type": [
                "object"
              ]
            },
            "type": "array"
          },
          "created_at": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "legacy_opportunity_id": {
            "description": "The internal legacy ID of the opportunity",
            "example": 12345,
            "type": "integer"
          },
          "opportunity_assistance_listings": {
            "items": {
              "$ref": "#/components/schemas/OpportunityAssistanceListingV1",
              "type": [
                "object"
              ]
            },
            "type": "array"
          },
          "opportunity_id": {
            "description": "The internal ID of the opportunity",
            "example": "123e4567-e89b-12d3-a456-426614174000",
            "format": "uuid",
            "type": "string"
          },
          "opportunity_number": {
            "description": "The funding opportunity number",
            "example": "ABC-123-XYZ-001",
            "type": [
              "string",
              "null"
            ]
          },
          "opportunity_status": {
            "description": "The current status of the opportunity",
            "enum": [
              "forecasted",
              "posted",
              "closed",
              "archived"
            ],
            "example": "posted",
            "type": [
              "string"
            ]
          },
          "opportunity_title": {
            "description": "The title of the opportunity",
            "example": "Research into conservation techniques",
            "type": [
              "string",
              "null"
            ]
          },
          "summary": {
            "$ref": "#/components/schemas/OpportunitySummaryV1",
            "type": [
              "object"
            ]
          },
          "top_level_agency_name": {
            "description": "The name of the top level agency who created the oppportunity",
            "example": "Department of Examples",
            "type": [
              "string",
              "null"
            ]
          },
          "updated_at": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "PaginationInfo": {
        "properties": {
          "page_offset": {
            "description": "The page number that was fetched",
            "example": 1,
            "type": "integer"
          },
          "page_size": {
            "description": "The size of the page fetched",
            "example": 25,
            "type": "integer"
          },
          "sort_order": {
            "description": "The sort order passed in originally",
            "items": {
              "$ref": "#/components/schemas/SortOrder",
              "type": [
                "object"
              ]
            },
            "type": "array"
          },
          "total_pages": {
            "description": "The total number of pages that can be fetched",
            "example": 2,
            "type": "integer"
          },
          "total_records": {
            "description": "The total number of records fetchable",
            "example": 42,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "PostDateFilterV1": {
        "properties": {
          "end_date": {
            "format": "date",
            "type": [
              "string",
              "null"
            ]
          },
          "end_date_relative": {
            "maximum": 1000000,
            "minimum": -1000000,
            "type": [
              "integer",
              "null"
            ]
          },
          "start_date": {
            "format": "date",
            "type": [
              "string",
              "null"
            ]
          },
          "start_date_relative": {
            "maximum": 1000000,
            "minimum": -1000000,
            "type": [
              "integer",
              "null"
            ]
          }
        },
        "type": "object"
      },
      "SamGovEntity": {
        "properties": {
          "expiration_date": {
            "format": "date",
            "type": "string"
          },
          "legal_business_name": {
            "type": "string"
          },
          "uei": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "SavedOpportunityResponseV1": {
        "properties": {
          "opportunity_id": {
            "description": "The ID of the saved opportunity",
            "example": "123e4567-e89b-12d3-a456-426614174000",
            "format": "uuid",
            "type": "string"
          },
          "opportunity_status": {
            "description": "The current status of the opportunity",
            "enum": [
              "forecasted",
              "posted",
              "closed",
              "archived"
            ],
            "example": "posted",
            "type": [
              "string"
            ]
          },
          "opportunity_title": {
            "description": "The title of the opportunity",
            "example": "my title",
            "type": [
              "string",
              "null"
            ]
          },
          "summary": {
            "$ref": "#/components/schemas/SavedOpportunitySummaryV1",
            "type": [
              "object"
            ]
          }
        },
        "type": "object"
      },
      "SavedOpportunitySummaryV1": {
        "properties": {
          "close_date": {
            "description": "The date the opportunity will close",
            "example": "2024-01-01",
            "format": "date",
            "type": "string"
          },
          "is_forecast": {
            "description": "Whether the opportunity is forecasted",
            "example": false,
            "type": "boolean"
          },
          "post_date": {
            "description": "The date the opportunity was posted",
            "example": "2024-01-01",
            "format": "date",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SavedSearchResponse": {
        "properties": {
          "created_at": {
            "description": "When the search was saved",
            "example": "2024-01-01T00:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "name": {
            "description": "Name of the saved search",
            "example": "Grant opportunities in California",
            "type": "string"
          },
          "saved_search_id": {
            "description": "The ID of the saved search",
            "example": "123e4567-e89b-12d3-a456-426614174000",
            "format": "uuid",
            "type": "string"
          },
          "search_query": {
            "$ref": "#/components/schemas/OpportunitySearchRequestV1",
            "description": "The saved search query parameters",
            "type": [
              "object"
            ]
          }
        },
        "type": "object"
      },
      "SortOrder": {
        "properties": {
          "order_by": {
            "description": "The field that the records were sorted by",
            "example": "id",
            "type": "string"
          },
          "sort_direction": {
            "description": "The direction the records are sorted",
            "enum": [
              "ascending",
              "descending"
            ],
            "type": [
              "string"
            ]
          }
        },
        "type": "object"
      },
      "SortOrderAgencyPaginationV1": {
        "properties": {
          "order_by": {
            "description": "The field to sort the response by",
            "enum": [
              "agency_code",
              "agency_name",
              "created_at"
            ],
            "type": "string"
          },
          "sort_direction": {
            "description": "Whether to sort the response ascending or descending",
            "enum": [
              "ascending",
              "descending"
            ],
            "type": [
              "string"
            ]
          }
        },
        "required": [
          "order_by",
          "sort_direction"
        ],
        "type": "object"
      },
      "SortOrderAgencySearchPaginationV1": {
        "properties": {
          "order_by": {
            "description": "The field to sort the response by",
            "enum": [
              "agency_code",
              "agency_name"
            ],
            "type": "string"
          },
          "sort_direction": {
            "description": "Whether to sort the response ascending or descending",
            "enum": [
              "ascending",
              "descending"
            ],
            "type": [
              "string"
            ]
          }
        },
        "required": [
          "order_by",
          "sort_direction"
        ],
        "type": "object"
      },
      "SortOrderExtractMetadataPaginationV1": {
        "properties": {
          "order_by": {
            "description": "The field to sort the response by",
            "enum": [
              "created_at"
            ],
            "type": "string"
          },
          "sort_direction": {
            "description": "Whether to sort the response ascending or descending",
            "enum": [
              "ascending",
              "descending"
            ],
            "type": [
              "string"
            ]
          }
        },
        "required": [
          "order_by",
          "sort_direction"
        ],
        "type": "object"
      },
      "SortOrderOpportunityPaginationV1": {
        "properties": {
          "order_by": {
            "description": "The field to sort the response by",
            "enum": [
              "relevancy",
              "opportunity_id",
              "opportunity_number",
              "opportunity_title",
              "post_date",
              "close_date",
              "agency_code",
              "agency_name",
              "top_level_agency_name",
              "award_floor",
              "award_ceiling"
            ],
            "type": "string"
          },
          "sort_direction": {
            "description": "Whether to sort the response ascending or descending",
            "enum": [
              "ascending",
              "descending"
            ],
            "type": [
              "string"
            ]
          }
        },
        "required": [
          "order_by",
          "sort_direction"
        ],
        "type": "object"
      },
      "SortOrderUserGetSavedOpportunityPaginationV1": {
        "properties": {
          "order_by": {
            "description": "The field to sort the response by",
            "enum": [
              "created_at",
              "updated_at",
              "opportunity_title",
              "close_date"
            ],
            "type": "string"
          },
          "sort_direction": {
            "description": "Whether to sort the response ascending or descending",
            "enum": [
              "ascending",
              "descending"
            ],
            "type": [
              "string"
            ]
          }
        },
        "required": [
          "order_by",
          "sort_direction"
        ],
        "type": "object"
      },
      "SortOrderUserGetSavedSearchPaginationV1": {
        "properties": {
          "order_by": {
            "description": "The field to sort the response by",
            "enum": [
              "created_at",
              "updated_at",
              "name"
            ],
            "type": "string"
          },
          "sort_direction": {
            "description": "Whether to sort the response ascending or descending",
            "enum": [
              "ascending",
              "descending"
            ],
            "type": [
              "string"
            ]
          }
        },
        "required": [
          "order_by",
          "sort_direction"
        ],
        "type": "object"
      },
      "TopLevelAgencyOppSearchFilterV1": {
        "properties": {
          "one_of": {
            "items": {
              "example": "USAID",
              "minLength": 2,
              "type": "string"
            },
            "minItems": 1,
            "type": "array"
          }
        },
        "type": "object"
      },
      "User": {
        "properties": {
          "email": {
            "description": "The email address returned from Oauth2 provider",
            "example": "user@example.com",
            "type": "string"
          },
          "external_user_type": {
            "description": "The Oauth2 provider through which a user was authenticated",
            "enum": [
              "login_gov"
            ],
            "example": "login_gov",
            "type": [
              "string"
            ]
          },
          "user_id": {
            "description": "The internal ID of a user",
            "example": "861a0148-cf2c-432b-b0b3-690016299ab1",
            "type": "string"
          }
        },
        "type": "object"
      },
      "UserDeleteSavedOpportunityResponse": {
        "properties": {
          "data": {
            "example": null
          },
          "message": {
            "description": "The message to return",
            "example": "Success",
            "type": "string"
          },
          "status_code": {
            "description": "The HTTP status code",
            "example": 200,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "UserDeleteSavedSearchResponse": {
        "properties": {
          "data": {
            "example": null
          },
          "message": {
            "description": "The message to return",
            "example": "Success",
            "type": "string"
          },
          "status_code": {
            "description": "The HTTP status code",
            "example": 200,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "UserGetResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/User",
            "type": [
              "object"
            ]
          },
          "message": {
            "description": "The message to return",
            "example": "Success",
            "type": "string"
          },
          "status_code": {
            "description": "The HTTP status code",
            "example": 200,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "UserGetSavedOpportunityPaginationV1": {
        "properties": {
          "page_offset": {
            "description": "The page number to fetch, starts counting from 1",
            "example": 1,
            "minimum": 1,
            "type": "integer"
          },
          "page_size": {
            "description": "The size of the page to fetch",
            "example": 25,
            "maximum": 5000,
            "minimum": 1,
            "type": "integer"
          },
          "sort_order": {
            "default": [
              {
                "order_by": "created_at",
                "sort_direction": "descending"
              }
            ],
            "description": "The list of sorting rules",
            "items": {
              "$ref": "#/components/schemas/SortOrderUserGetSavedOpportunityPaginationV1",
              "type": [
                "object"
              ]
            },
            "maxItems": 5,
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "page_offset",
          "page_size"
        ],
        "type": "object"
      },
      "UserGetSavedSearchPaginationV1": {
        "properties": {
          "page_offset": {
            "description": "The page number to fetch, starts counting from 1",
            "example": 1,
            "minimum": 1,
            "type": "integer"
          },
          "page_size": {
            "description": "The size of the page to fetch",
            "example": 25,
            "maximum": 5000,
            "minimum": 1,
            "type": "integer"
          },
          "sort_order": {
            "default": [
              {
                "order_by": "created_at",
                "sort_direction": "descending"
              }
            ],
            "description": "The list of sorting rules",
            "items": {
              "$ref": "#/components/schemas/SortOrderUserGetSavedSearchPaginationV1",
              "type": [
                "object"
              ]
            },
            "maxItems": 5,
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "page_offset",
          "page_size"
        ],
        "type": "object"
      },
      "UserOrganization": {
        "properties": {
          "is_organization_owner": {
            "description": "Whether the user is an owner of this organization",
            "example": true,
            "type": "boolean"
          },
          "organization_id": {
            "description": "The internal ID of the organization",
            "example": "123e4567-e89b-12d3-a456-426614174000",
            "type": "string"
          },
          "sam_gov_entity": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SamGovEntity"
              },
              {
                "type": "null"
              }
            ],
            "description": "SAM.gov entity information for the organization",
            "type": [
              "object",
              "null"
            ]
          }
        },
        "type": "object"
      },
      "UserOrganizationsResponse": {
        "properties": {
          "data": {
            "description": "List of organizations the user is associated with",
            "items": {
              "$ref": "#/components/schemas/UserOrganization",
              "type": [
                "object"
              ]
            },
            "type": "array"
          },
          "message": {
            "description": "The message to return",
            "example": "Success",
            "type": "string"
          },
          "status_code": {
            "description": "The HTTP status code",
            "example": 200,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "UserSaveOpportunityRequest": {
        "properties": {
          "opportunity_id": {
            "example": "123e4567-e89b-12d3-a456-426614174000",
            "format": "uuid",
            "type": "string"
          }
        },
        "required": [
          "opportunity_id"
        ],
        "type": "object"
      },
      "UserSaveOpportunityResponse": {
        "properties": {
          "data": {
            "example": null
          },
          "message": {
            "description": "The message to return",
            "example": "Success",
            "type": "string"
          },
          "status_code": {
            "description": "The HTTP status code",
            "example": 200,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "UserSaveSearchRequest": {
        "properties": {
          "name": {
            "description": "Name of the saved search",
            "example": "Example search",
            "type": "string"
          },
          "search_query": {
            "$ref": "#/components/schemas/OpportunitySearchRequestV1",
            "type": [
              "object"
            ]
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "UserSaveSearchResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SavedSearchResponse",
            "type": [
              "object"
            ]
          },
          "message": {
            "description": "The message to return",
            "example": "Success",
            "type": "string"
          },
          "status_code": {
            "description": "The HTTP status code",
            "example": 200,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "UserSavedOpportunitiesRequest": {
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/UserGetSavedOpportunityPaginationV1",
            "type": [
              "object"
            ]
          }
        },
        "required": [
          "pagination"
        ],
        "type": "object"
      },
      "UserSavedOpportunitiesResponse": {
        "properties": {
          "data": {
            "description": "List of saved opportunities",
            "items": {
              "$ref": "#/components/schemas/SavedOpportunityResponseV1",
              "type": [
                "object"
              ]
            },
            "type": "array"
          },
          "message": {
            "description": "The message to return",
            "example": "Success",
            "type": "string"
          },
          "status_code": {
            "description": "The HTTP status code",
            "example": 200,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "UserSavedSearchesRequest": {
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/UserGetSavedSearchPaginationV1",
            "type": [
              "object"
            ]
          }
        },
        "required": [
          "pagination"
        ],
        "type": "object"
      },
      "UserSavedSearchesResponse": {
        "properties": {
          "data": {
            "description": "List of saved searches",
            "items": {
              "$ref": "#/components/schemas/SavedSearchResponse",
              "type": [
                "object"
              ]
            },
            "type": "array"
          },
          "message": {
            "description": "The message to return",
            "example": "Success",
            "type": "string"
          },
          "status_code": {
            "description": "The HTTP status code",
            "example": 200,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "UserTokenLogoutResponse": {
        "properties": {
          "data": {
            "example": null
          },
          "message": {
            "description": "The message to return",
            "example": "Success",
            "type": "string"
          },
          "status_code": {
            "description": "The HTTP status code",
            "example": 200,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "UserTokenRefreshResponse": {
        "properties": {
          "data": {
            "example": null
          },
          "message": {
            "description": "The message to return",
            "example": "Success",
            "type": "string"
          },
          "status_code": {
            "description": "The HTTP status code",
            "example": 200,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "UserUpdateSavedSearchRequest": {
        "properties": {
          "name": {
            "description": "Name of the saved search",
            "example": "Example search",
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "UserUpdateSavedSearchResponse": {
        "properties": {
          "data": {
            "example": null
          },
          "message": {
            "description": "The message to return",
            "example": "Success",
            "type": "string"
          },
          "status_code": {
            "description": "The HTTP status code",
            "example": 200,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ValidationIssue": {
        "properties": {
          "field": {
            "description": "The field that failed",
            "example": "summary.summary_description",
            "type": "string"
          },
          "message": {
            "description": "The message to return",
            "example": "Not a valid string.",
            "type": "string"
          },
          "type": {
            "description": "The type of error",
            "example": "invalid",
            "type": "string"
          },
          "value": {
            "description": "The value that failed",
            "example": "invalid string",
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "ApiJwtAuth": {
        "in": "header",
        "name": "X-SGG-Token",
        "type": "apiKey"
      },
      "ApiKeyAuth": {
        "in": "header",
        "name": "X-Auth",
        "type": "apiKey"
      },
      "InternalApiJwtAuth": {
        "in": "header",
        "name": "X-SGG-Internal-Token",
        "type": "apiKey"
      }
    }
  },
  "info": {
    "contact": {
      "email": "simpler@grants.gov",
      "name": "Simpler Grants.gov",
      "url": "https://simpler.grants.gov/"
    },
    "description": "\nBack end API for simpler.grants.gov.\n\nThis API is an ALPHA VERSION! Its current form is primarily for testing and feedback. Features are still under heavy development, and subject to change. Not for production use.\n\nSee [Release Phases](https://github.com/github/roadmap?tab=readme-ov-file#release-phases) for further details.\n",
    "title": "Simpler Grants API",
    "version": "v0"
  },
  "openapi": "3.1.0",
  "paths": {
    "/health": {
      "get": {
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthcheckResponse"
                }
              }
            },
            "description": "Successful response"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Service Unavailable"
          }
        },
        "summary": "Health",
        "tags": [
          "Health"
        ]
      }
    },
    "/v1/agencies": {
      "post": {
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "example1": {
                  "summary": "No filters",
                  "value": {
                    "pagination": {
                      "page_offset": 1,
                      "page_size": 25,
                      "sort_order": [
                        {
                          "order_by": "created_at",
                          "sort_direction": "descending"
                        }
                      ]
                    }
                  }
                }
              },
              "schema": {
                "$ref": "#/components/schemas/AgencyListRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyListResponse"
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Authentication error"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Agencies Get",
        "tags": [
          "Agency v1"
        ]
      }
    },
    "/v1/agencies/search": {
      "post": {
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "example1": {
                  "summary": "No filters",
                  "value": {
                    "pagination": {
                      "page_offset": 1,
                      "page_size": 25,
                      "sort_order": [
                        {
                          "order_by": "agency_name",
                          "sort_direction": "descending"
                        }
                      ]
                    },
                    "query": "USAID"
                  }
                },
                "example2": {
                  "summary": "Filter by open/forecasted agency",
                  "value": {
                    "filters": {
                      "has_forecasted_opportunity": {
                        "one_of": [
                          "False"
                        ]
                      },
                      "has_open_opportunity": {
                        "one_of": [
                          "False"
                        ]
                      }
                    },
                    "pagination": {
                      "page_offset": 1,
                      "page_size": 25,
                      "sort_order": [
                        {
                          "order_by": "agency_name",
                          "sort_direction": "descending"
                        }
                      ]
                    }
                  }
                }
              },
              "schema": {
                "$ref": "#/components/schemas/AgencySearchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencySearchResponseV1"
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Authentication error"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Agency Search",
        "tags": [
          "Agency v1"
        ]
      }
    },
    "/v1/extracts": {
      "post": {
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "example1": {
                  "summary": "No filters",
                  "value": {
                    "pagination": {
                      "page_offset": 1,
                      "page_size": 25,
                      "sort_order": [
                        {
                          "order_by": "created_at",
                          "sort_direction": "descending"
                        }
                      ]
                    }
                  }
                }
              },
              "schema": {
                "$ref": "#/components/schemas/ExtractMetadataRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtractMetadataListResponse"
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Authentication error"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Extract Metadata Get",
        "tags": [
          "Extract v1"
        ]
      }
    },
    "/v1/opportunities/search": {
      "post": {
        "description": "\n__ALPHA VERSION__\n\nThis endpoint in its current form is primarily for testing and feedback.\n\nFeatures in this endpoint are still under heavy development, and subject to change. Not for production use.\n\nSee [Release Phases](https://github.com/github/roadmap?tab=readme-ov-file#release-phases) for further details.\n",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "example1": {
                  "summary": "No filters",
                  "value": {
                    "pagination": {
                      "page_offset": 1,
                      "page_size": 25,
                      "sort_order": [
                        {
                          "order_by": "opportunity_id",
                          "sort_direction": "ascending"
                        }
                      ]
                    }
                  }
                },
                "example2": {
                  "summary": "All filters",
                  "value": {
                    "filters": {
                      "agency": {
                        "one_of": [
                          "USAID",
                          "DOC"
                        ]
                      },
                      "applicant_type": {
                        "one_of": [
                          "state_governments",
                          "county_governments",
                          "individuals"
                        ]
                      },
                      "close_date": {
                        "start_date": "2024-01-01"
                      },
                      "funding_category": {
                        "one_of": [
                          "recovery_act",
                          "arts",
                          "natural_resources"
                        ]
                      },
                      "funding_instrument": {
                        "one_of": [
                          "cooperative_agreement",
                          "grant"
                        ]
                      },
                      "opportunity_status": {
                        "one_of": [
                          "forecasted",
                          "posted"
                        ]
                      },
                      "post_date": {
                        "end_date": "2024-02-01",
                        "start_date": "2024-01-01"
                      }
                    },
                    "pagination": {
                      "page_offset": 1,
                      "page_size": 25,
                      "sort_order": [
                        {
                          "order_by": "opportunity_id",
                          "sort_direction": "ascending"
                        }
                      ]
                    },
                    "query": "research"
                  }
                },
                "example3": {
                  "summary": "Query & opportunity_status filters",
                  "value": {
                    "filters": {
                      "opportunity_status": {
                        "one_of": [
                          "forecasted",
                          "posted"
                        ]
                      }
                    },
                    "pagination": {
                      "page_offset": 1,
                      "page_size": 25,
                      "sort_order": [
                        {
                          "order_by": "opportunity_id",
                          "sort_direction": "ascending"
                        }
                      ]
                    },
                    "query": "research"
                  }
                },
                "example4": {
                  "summary": "CSV file response",
                  "value": {
                    "filters": {
                      "opportunity_status": {
                        "one_of": [
                          "forecasted",
                          "posted"
                        ]
                      }
                    },
                    "format": "csv",
                    "pagination": {
                      "page_offset": 1,
                      "page_size": 100,
                      "sort_order": [
                        {
                          "order_by": "opportunity_id",
                          "sort_direction": "ascending"
                        }
                      ]
                    }
                  }
                },
                "example5": {
                  "summary": "Filter by award fields",
                  "value": {
                    "filters": {
                      "award_ceiling": {
                        "max": 1000000
                      },
                      "award_floor": {
                        "min": 10000
                      },
                      "estimated_total_program_funding": {
                        "max": 250000,
                        "min": 100000
                      },
                      "expected_number_of_awards": {
                        "min": 5
                      }
                    },
                    "pagination": {
                      "page_offset": 1,
                      "page_size": 25,
                      "sort_order": [
                        {
                          "order_by": "opportunity_id",
                          "sort_direction": "ascending"
                        }
                      ]
                    }
                  }
                },
                "example6": {
                  "summary": "Filter by assistance listing numbers",
                  "value": {
                    "filters": {
                      "assistance_listing_number": {
                        "one_of": [
                          "43.001",
                          "47.049"
                        ]
                      }
                    },
                    "pagination": {
                      "page_offset": 1,
                      "page_size": 25,
                      "sort_order": [
                        {
                          "order_by": "opportunity_id",
                          "sort_direction": "ascending"
                        }
                      ]
                    }
                  }
                },
                "example7": {
                  "summary": "Primary sort agency_code desc, secondary sort opportunity_id asc",
                  "value": {
                    "pagination": {
                      "page_offset": 1,
                      "page_size": 25,
                      "sort_order": [
                        {
                          "order_by": "agency_code",
                          "sort_direction": "descending"
                        },
                        {
                          "order_by": "opportunity_id",
                          "sort_direction": "ascending"
                        }
                      ]
                    }
                  }
                }
              },
              "schema": {
                "$ref": "#/components/schemas/OpportunitySearchRequestV1"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OpportunitySearchResponseV1"
                }
              },
              "application/octet-stream": {}
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Authentication error"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Opportunity Search",
        "tags": [
          "Opportunity v1"
        ]
      }
    },
    "/v1/opportunities/{legacy_opportunity_id}": {
      "get": {
        "description": "\n__ALPHA VERSION__\n\nThis endpoint in its current form is primarily for testing and feedback.\n\nFeatures in this endpoint are still under heavy development, and subject to change. Not for production use.\n\nSee [Release Phases](https://github.com/github/roadmap?tab=readme-ov-file#release-phases) for further details.\n",
        "parameters": [
          {
            "in": "path",
            "name": "legacy_opportunity_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OpportunityGetResponseV1"
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Opportunity Get Legacy",
        "tags": [
          "Opportunity v1"
        ]
      }
    },
    "/v1/opportunities/{opportunity_id}": {
      "get": {
        "description": "\n__ALPHA VERSION__\n\nThis endpoint in its current form is primarily for testing and feedback.\n\nFeatures in this endpoint are still under heavy development, and subject to change. Not for production use.\n\nSee [Release Phases](https://github.com/github/roadmap?tab=readme-ov-file#release-phases) for further details.\n",
        "parameters": [
          {
            "in": "path",
            "name": "opportunity_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OpportunityGetResponseV1"
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Opportunity Get",
        "tags": [
          "Opportunity v1"
        ]
      }
    },
    "/v1/users/login": {
      "get": {
        "description": "\nTo use this endpoint, click [this link](/v1/users/login) which will redirect\nyou to an OAuth provider where you can sign into an account.\n\nDo not try to use the execute option below as OpenAPI will not redirect your browser for you.\n\nThe token you receive can then be set to the X-SGG-Token header for authenticating with endpoints.\n",
        "parameters": [],
        "responses": {
          "302": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Found"
          }
        },
        "summary": "User Login",
        "tags": [
          "User v1 - Internal Only"
        ]
      }
    },
    "/v1/users/token/logout": {
      "post": {
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserTokenLogoutResponse"
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Authentication error"
          }
        },
        "security": [
          {
            "ApiJwtAuth": []
          }
        ],
        "summary": "User Token Logout",
        "tags": [
          "User v1 - Internal Only"
        ]
      }
    },
    "/v1/users/token/refresh": {
      "post": {
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserTokenRefreshResponse"
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Authentication error"
          }
        },
        "security": [
          {
            "ApiJwtAuth": []
          }
        ],
        "summary": "User Token Refresh",
        "tags": [
          "User v1 - Internal Only"
        ]
      }
    },
    "/v1/users/{user_id}": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserGetResponse"
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "security": [
          {
            "ApiJwtAuth": []
          }
        ],
        "summary": "User Get",
        "tags": [
          "User v1 - Internal Only"
        ]
      }
    },
    "/v1/users/{user_id}/organizations": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOrganizationsResponse"
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "security": [
          {
            "ApiJwtAuth": []
          }
        ],
        "summary": "User Get Organizations",
        "tags": [
          "User v1 - Internal Only"
        ]
      }
    },
    "/v1/users/{user_id}/saved-opportunities": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserSaveOpportunityRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSaveOpportunityResponse"
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "ApiJwtAuth": []
          }
        ],
        "summary": "User Save Opportunity",
        "tags": [
          "User v1 - Internal Only"
        ]
      }
    },
    "/v1/users/{user_id}/saved-opportunities/list": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserSavedOpportunitiesRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSavedOpportunitiesResponse"
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "ApiJwtAuth": []
          }
        ],
        "summary": "User Get Saved Opportunities",
        "tags": [
          "User v1 - Internal Only"
        ]
      }
    },
    "/v1/users/{user_id}/saved-opportunities/{legacy_opportunity_id}": {
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "legacy_opportunity_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDeleteSavedOpportunityResponse"
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "security": [
          {
            "ApiJwtAuth": []
          }
        ],
        "summary": "User Delete Saved Opportunity Legacy",
        "tags": [
          "User v1 - Internal Only"
        ]
      }
    },
    "/v1/users/{user_id}/saved-opportunities/{opportunity_id}": {
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "opportunity_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDeleteSavedOpportunityResponse"
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "security": [
          {
            "ApiJwtAuth": []
          }
        ],
        "summary": "User Delete Saved Opportunity",
        "tags": [
          "User v1 - Internal Only"
        ]
      }
    },
    "/v1/users/{user_id}/saved-searches": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserSaveSearchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSaveSearchResponse"
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "ApiJwtAuth": []
          }
        ],
        "summary": "User Save Search",
        "tags": [
          "User v1 - Internal Only"
        ]
      }
    },
    "/v1/users/{user_id}/saved-searches/list": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserSavedSearchesRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSavedSearchesResponse"
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "ApiJwtAuth": []
          }
        ],
        "summary": "User Get Saved Searches",
        "tags": [
          "User v1 - Internal Only"
        ]
      }
    },
    "/v1/users/{user_id}/saved-searches/{saved_search_id}": {
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "saved_search_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDeleteSavedSearchResponse"
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "security": [
          {
            "ApiJwtAuth": []
          }
        ],
        "summary": "User Delete Saved Search",
        "tags": [
          "User v1 - Internal Only"
        ]
      },
      "put": {
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "saved_search_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateSavedSearchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserUpdateSavedSearchResponse"
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "ApiJwtAuth": []
          }
        ],
        "summary": "User Update Saved Search",
        "tags": [
          "User v1 - Internal Only"
        ]
      }
    }
  },
  "tags": [
    {
      "name": "Health"
    },
    {
      "name": "Opportunity v1"
    },
    {
      "name": "Extract v1"
    },
    {
      "name": "Agency v1"
    },
    {
      "name": "User v1 - Internal Only"
    }
  ]
}
